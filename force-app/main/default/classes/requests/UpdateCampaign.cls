// DO NOT EDIT: File is generated by code generator.

public with sharing class UpdateCampaign extends PokepayRequest {
    private String name;
    private String starts_at;
    private String ends_at;
    private Integer priority;
    private String event;
    private String description;
    private String status;
    private String point_expires_at;
    private Integer point_expires_in_days;
    private Boolean is_exclusive;
    private String subject;
    private Object[] amount_based_point_rules;
    private Object[] product_based_point_rules;
    private Integer[] applicable_days_of_week;
    private Object[] applicable_time_ranges;
    private String[] applicable_shop_ids;
    private Integer minimum_number_for_combination_purchase;
    private String campaign_id;

    public UpdateCampaign(String campaignId) {
        this.campaign_id = campaignId;
    }

    public UpdateCampaign name(String name) {
        this.name = name;
        return this;
    }

    public UpdateCampaign startsAt(String startsAt) {
        this.starts_at = startsAt;
        return this;
    }

    public UpdateCampaign endsAt(String endsAt) {
        this.ends_at = endsAt;
        return this;
    }

    public UpdateCampaign priority(Integer priority) {
        this.priority = priority;
        return this;
    }

    public UpdateCampaign event(String event) {
        this.event = event;
        return this;
    }

    public UpdateCampaign description(String description) {
        this.description = description;
        return this;
    }

    public UpdateCampaign status(String status) {
        this.status = status;
        return this;
    }

    public UpdateCampaign pointExpiresAt(String pointExpiresAt) {
        this.point_expires_at = pointExpiresAt;
        return this;
    }

    public UpdateCampaign pointExpiresInDays(Integer pointExpiresInDays) {
        this.point_expires_in_days = pointExpiresInDays;
        return this;
    }

    public UpdateCampaign setExclusive(Boolean exclusive) {
        this.is_exclusive = exclusive;
        return this;
    }

    public UpdateCampaign subject(String subject) {
        this.subject = subject;
        return this;
    }

    public UpdateCampaign amountBasedPointRules(Object[] amountBasedPointRules) {
        this.amount_based_point_rules = amountBasedPointRules;
        return this;
    }

    public UpdateCampaign productBasedPointRules(Object[] productBasedPointRules) {
        this.product_based_point_rules = productBasedPointRules;
        return this;
    }

    public UpdateCampaign applicableDaysOfWeek(Integer[] applicableDaysOfWeek) {
        this.applicable_days_of_week = applicableDaysOfWeek;
        return this;
    }

    public UpdateCampaign applicableTimeRanges(Object[] applicableTimeRanges) {
        this.applicable_time_ranges = applicableTimeRanges;
        return this;
    }

    public UpdateCampaign applicableShopIds(String[] applicableShopIds) {
        this.applicable_shop_ids = applicableShopIds;
        return this;
    }

    public UpdateCampaign minimumNumberForCombinationPurchase(Integer minimumNumberForCombinationPurchase) {
        this.minimum_number_for_combination_purchase = minimumNumberForCombinationPurchase;
        return this;
    }

    public override String method() {
        return 'PATCH';
    }

    public override String path() {
        return '/campaigns' + '/' + this.campaign_id;
    }

    public override Type getResponseClass() {
        return Campaign.class;
    }

    public override String getRequestBody() {
        Map<String, Object> requestMap = new Map<String, Object>();
        if(this.name != null){
            requestMap.put('name', this.name);
        }
        if(this.starts_at != null){
            requestMap.put('starts_at', this.starts_at);
        }
        if(this.ends_at != null){
            requestMap.put('ends_at', this.ends_at);
        }
        if(this.priority != null){
            requestMap.put('priority', this.priority);
        }
        if(this.event != null){
            requestMap.put('event', this.event);
        }
        if(this.description != null){
            requestMap.put('description', this.description);
        }
        if(this.status != null){
            requestMap.put('status', this.status);
        }
        if(this.point_expires_at != null){
            requestMap.put('point_expires_at', this.point_expires_at);
        }
        if(this.point_expires_in_days != null){
            requestMap.put('point_expires_in_days', this.point_expires_in_days);
        }
        if(this.is_exclusive != null){
            requestMap.put('is_exclusive', this.is_exclusive);
        }
        if(this.subject != null){
            requestMap.put('subject', this.subject);
        }
        if(this.amount_based_point_rules != null){
            requestMap.put('amount_based_point_rules', this.amount_based_point_rules);
        }
        if(this.product_based_point_rules != null){
            requestMap.put('product_based_point_rules', this.product_based_point_rules);
        }
        if(this.applicable_days_of_week != null){
            requestMap.put('applicable_days_of_week', this.applicable_days_of_week);
        }
        if(this.applicable_time_ranges != null){
            requestMap.put('applicable_time_ranges', this.applicable_time_ranges);
        }
        if(this.applicable_shop_ids != null){
            requestMap.put('applicable_shop_ids', this.applicable_shop_ids);
        }
        if(this.minimum_number_for_combination_purchase != null){
            requestMap.put('minimum_number_for_combination_purchase', this.minimum_number_for_combination_purchase);
        }
        return JSON.serialize(requestMap, true);
    }
}
