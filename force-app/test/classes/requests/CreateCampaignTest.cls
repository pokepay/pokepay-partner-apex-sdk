// DO NOT EDIT: File is generated by code generator.

@isTest
private class CreateCampaignTest {
    @isTest static void test0() {
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        );
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test1() {
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .destPrivateMoneyId('1a3b05c1-dd35-4f18-85b0-0567b157c04b');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","dest_private_money_id":"1a3b05c1-dd35-4f18-85b0-0567b157c04b"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test2() {
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .minimumNumberForCombinationPurchase(9108)
                .destPrivateMoneyId('c916ceec-ab20-43f9-a4a0-47e2d5c35e52');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","minimum_number_for_combination_purchase":9108,"dest_private_money_id":"c916ceec-ab20-43f9-a4a0-47e2d5c35e52"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test3() {
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .applicableShopIds(new String[]{'8a6b09cd-c692-42b1-8473-98fe8946b179','c452412e-6232-4e9d-bb67-3429cdeba818','e02c5297-62b1-4c2c-8a21-27d0cf14b966','dbff2ab0-4c88-4abc-9bcd-637184c3d382','869bd12a-1e14-4600-a486-1b7ae673d558','813c62e5-a582-4cdb-9871-268338e0b6cb','5449d617-425f-40b5-9e06-6172e68a88d2','15dff9ad-eec4-49cb-822c-9876a29784ef'})
                .minimumNumberForCombinationPurchase(7420)
                .destPrivateMoneyId('68859c8e-60e3-4f52-a263-fdd4cb940384');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","applicable_shop_ids":["8a6b09cd-c692-42b1-8473-98fe8946b179","c452412e-6232-4e9d-bb67-3429cdeba818","e02c5297-62b1-4c2c-8a21-27d0cf14b966","dbff2ab0-4c88-4abc-9bcd-637184c3d382","869bd12a-1e14-4600-a486-1b7ae673d558","813c62e5-a582-4cdb-9871-268338e0b6cb","5449d617-425f-40b5-9e06-6172e68a88d2","15dff9ad-eec4-49cb-822c-9876a29784ef"],"minimum_number_for_combination_purchase":7420,"dest_private_money_id":"68859c8e-60e3-4f52-a263-fdd4cb940384"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test4() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .applicableTimeRanges(new Object[]{items,items2,items3,items4,items5,items6,items7,items8,items9,items10})
                .applicableShopIds(new String[]{'ff8434e3-ab25-4701-ab23-e3952ca2dc5e','17f3aaf3-8c29-46ed-be56-05a93cd87788','900d192b-7d24-469a-97f9-826a2294098a','9a52f2e1-405f-40a5-ae90-46798211b697'})
                .minimumNumberForCombinationPurchase(1320)
                .destPrivateMoneyId('a00067aa-41b9-402b-a07b-e3a45aec22d4');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["ff8434e3-ab25-4701-ab23-e3952ca2dc5e","17f3aaf3-8c29-46ed-be56-05a93cd87788","900d192b-7d24-469a-97f9-826a2294098a","9a52f2e1-405f-40a5-ae90-46798211b697"],"minimum_number_for_combination_purchase":1320,"dest_private_money_id":"a00067aa-41b9-402b-a07b-e3a45aec22d4"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test5() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .applicableDaysOfWeek(new Integer[]{0,0,3,1})
                .applicableTimeRanges(new Object[]{items,items2,items3})
                .applicableShopIds(new String[]{'8757c45e-1ff6-4b15-8c61-9494755997b0','56ab9099-6f74-40a5-bb33-34af34fc012b'})
                .minimumNumberForCombinationPurchase(3734)
                .destPrivateMoneyId('aa00d00d-8624-47df-b2fc-74827bab4579');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","applicable_days_of_week":[0,0,3,1],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["8757c45e-1ff6-4b15-8c61-9494755997b0","56ab9099-6f74-40a5-bb33-34af34fc012b"],"minimum_number_for_combination_purchase":3734,"dest_private_money_id":"aa00d00d-8624-47df-b2fc-74827bab4579"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test6() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .productBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7})
                .applicableDaysOfWeek(new Integer[]{4})
                .applicableTimeRanges(new Object[]{items8,items9,items10,items11,items12,items13,items14,items15,items16})
                .applicableShopIds(new String[]{})
                .minimumNumberForCombinationPurchase(4367)
                .destPrivateMoneyId('88242b56-b3d7-404d-abac-b0b4bd6f2bd1');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[4],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":[],"minimum_number_for_combination_purchase":4367,"dest_private_money_id":"88242b56-b3d7-404d-abac-b0b4bd6f2bd1"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test7() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .amountBasedPointRules(new Object[]{})
                .productBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8})
                .applicableDaysOfWeek(new Integer[]{2,6,1,2,6,3,0,2})
                .applicableTimeRanges(new Object[]{items9,items10,items11,items12,items13})
                .applicableShopIds(new String[]{'0f7638de-4ee0-478a-b95c-b157c8d9f3b0','7d4a903f-0627-47cd-b8ed-2a830a8f895b','1ab657b5-e74f-4efd-9e98-045940ab21a3'})
                .minimumNumberForCombinationPurchase(9774)
                .destPrivateMoneyId('bd02e8e8-a033-404e-b45e-f45a0c726136');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","amount_based_point_rules":[],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[2,6,1,2,6,3,0,2],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["0f7638de-4ee0-478a-b95c-b157c8d9f3b0","7d4a903f-0627-47cd-b8ed-2a830a8f895b","1ab657b5-e74f-4efd-9e98-045940ab21a3"],"minimum_number_for_combination_purchase":9774,"dest_private_money_id":"bd02e8e8-a033-404e-b45e-f45a0c726136"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test8() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items18 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items19 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .subject('all')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8})
                .productBasedPointRules(new Object[]{items9,items10,items11,items12,items13,items14,items15,items16,items17})
                .applicableDaysOfWeek(new Integer[]{5,4,6,0,5,4,3,0,5,2})
                .applicableTimeRanges(new Object[]{items18,items19})
                .applicableShopIds(new String[]{})
                .minimumNumberForCombinationPurchase(6874)
                .destPrivateMoneyId('4adff7b9-729d-4494-af82-927be24c2d5b');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","subject":"all","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[5,4,6,0,5,4,3,0,5,2],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":[],"minimum_number_for_combination_purchase":6874,"dest_private_money_id":"4adff7b9-729d-4494-af82-927be24c2d5b"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test9() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7})
                .productBasedPointRules(new Object[]{items8,items9,items10,items11,items12,items13,items14,items15,items16})
                .applicableDaysOfWeek(new Integer[]{4,6,0,4,6,4,2})
                .applicableTimeRanges(new Object[]{})
                .applicableShopIds(new String[]{'ced00a79-c9c2-4e32-a883-577d435edb0b'})
                .minimumNumberForCombinationPurchase(4392)
                .destPrivateMoneyId('163fe244-15ee-4ed5-b919-975d32cc1790');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[4,6,0,4,6,4,2],"applicable_time_ranges":[],"applicable_shop_ids":["ced00a79-c9c2-4e32-a883-577d435edb0b"],"minimum_number_for_combination_purchase":4392,"dest_private_money_id":"163fe244-15ee-4ed5-b919-975d32cc1790"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test10() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .pointExpiresInDays(9582)
                .setExclusive(false)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6})
                .productBasedPointRules(new Object[]{items7,items8})
                .applicableDaysOfWeek(new Integer[]{6,6,5,2,4})
                .applicableTimeRanges(new Object[]{items9,items10,items11,items12,items13,items14})
                .applicableShopIds(new String[]{'40d0167d-54ff-49f5-b0aa-bcf6ec82d6dc','f33afc59-bdbc-426d-93e7-9cee0eee13a6','28e8eb5c-bf7b-4e92-acd3-87c047596853','0d3d2573-ae2c-451d-9960-c27b0629570d','c0037c9c-7544-4f2d-8d04-f3d20dc7bfed','8febfea2-cc0b-431e-8a6f-3b515ad0dc41'})
                .minimumNumberForCombinationPurchase(7867)
                .destPrivateMoneyId('86c34704-5962-4cfa-9f5c-0aa3aee737f5');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","point_expires_in_days":9582,"is_exclusive":false,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[6,6,5,2,4],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["40d0167d-54ff-49f5-b0aa-bcf6ec82d6dc","f33afc59-bdbc-426d-93e7-9cee0eee13a6","28e8eb5c-bf7b-4e92-acd3-87c047596853","0d3d2573-ae2c-451d-9960-c27b0629570d","c0037c9c-7544-4f2d-8d04-f3d20dc7bfed","8febfea2-cc0b-431e-8a6f-3b515ad0dc41"],"minimum_number_for_combination_purchase":7867,"dest_private_money_id":"86c34704-5962-4cfa-9f5c-0aa3aee737f5"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test11() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .pointExpiresAt('2020-11-07T01:46:12.000000+09:00')
                .pointExpiresInDays(3989)
                .setExclusive(false)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3})
                .productBasedPointRules(new Object[]{items4,items5,items6,items7,items8,items9})
                .applicableDaysOfWeek(new Integer[]{1,2,1,5,4,3,4,3,1,1})
                .applicableTimeRanges(new Object[]{items10,items11,items12,items13,items14,items15})
                .applicableShopIds(new String[]{'487c45ab-8394-4e1b-81e6-b13d8091afab','2a8c4079-6116-4953-a259-ec435fcccc0e','3cf63797-c71f-4268-9fb0-9d90429ce940','a5ab1da9-f4f5-48f1-8306-ada2ee9c4d9c'})
                .minimumNumberForCombinationPurchase(3648)
                .destPrivateMoneyId('fb0c0605-3ac7-411d-84f2-06c34228b39f');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","point_expires_at":"2020-11-07T01:46:12.000000+09:00","point_expires_in_days":3989,"is_exclusive":false,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[1,2,1,5,4,3,4,3,1,1],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["487c45ab-8394-4e1b-81e6-b13d8091afab","2a8c4079-6116-4953-a259-ec435fcccc0e","3cf63797-c71f-4268-9fb0-9d90429ce940","a5ab1da9-f4f5-48f1-8306-ada2ee9c4d9c"],"minimum_number_for_combination_purchase":3648,"dest_private_money_id":"fb0c0605-3ac7-411d-84f2-06c34228b39f"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test12() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items18 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items19 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .status('disabled')
                .pointExpiresAt('2024-03-13T17:05:42.000000+09:00')
                .pointExpiresInDays(7765)
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items})
                .productBasedPointRules(new Object[]{items2,items3,items4,items5,items6,items7,items8,items9})
                .applicableDaysOfWeek(new Integer[]{1})
                .applicableTimeRanges(new Object[]{items10,items11,items12,items13,items14,items15,items16,items17,items18,items19})
                .applicableShopIds(new String[]{'125ae97b-669b-4b38-a285-8c3812d5056f','1d9181c1-0595-499a-916a-718a16f273f1','db074c48-2b57-40c8-85a5-2d89e432be27','980f491a-e3a8-45ae-8855-b0263d116390','b3eb31d3-72e6-4ec2-9867-201a33fae313','4b575cdb-5ae0-4a73-be0a-5746c79c5888'})
                .minimumNumberForCombinationPurchase(5028)
                .destPrivateMoneyId('04f55353-967c-4ad1-a659-b8a55a9e96d6');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","status":"disabled","point_expires_at":"2024-03-13T17:05:42.000000+09:00","point_expires_in_days":7765,"is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[1],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["125ae97b-669b-4b38-a285-8c3812d5056f","1d9181c1-0595-499a-916a-718a16f273f1","db074c48-2b57-40c8-85a5-2d89e432be27","980f491a-e3a8-45ae-8855-b0263d116390","b3eb31d3-72e6-4ec2-9867-201a33fae313","4b575cdb-5ae0-4a73-be0a-5746c79c5888"],"minimum_number_for_combination_purchase":5028,"dest_private_money_id":"04f55353-967c-4ad1-a659-b8a55a9e96d6"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test13() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items18 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items19 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .description('jyMJi1osniwzvMM5724wrvJulOUj4A8M3jM0zpEWete9qDkCIpsjezZ2M4DgCUcWaYN25M17e8QItVUDPdnGbbjUMIkwxnSAoHyUqS2WrdyexDJw4m5W5NSAarqtGtlcKJp9gTWhEWSlBiVnl9lORTBFy0IWWO4H8KmbVB2M5EGOl')
                .status('enabled')
                .pointExpiresAt('2024-07-23T20:27:09.000000+09:00')
                .pointExpiresInDays(5785)
                .setExclusive(false)
                .subject('all')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8,items9,items10})
                .productBasedPointRules(new Object[]{})
                .applicableDaysOfWeek(new Integer[]{2,1,6,6,3,3,6})
                .applicableTimeRanges(new Object[]{items11,items12,items13,items14,items15,items16,items17,items18,items19})
                .applicableShopIds(new String[]{'738c740b-0e38-4c0c-a0f3-35f297ba7f37','8dc17a74-ee09-49bb-8941-dd6000861ba6','04c1aee4-d82b-4d41-ad32-a747e4c1a4e6'})
                .minimumNumberForCombinationPurchase(5181)
                .destPrivateMoneyId('eb421fc3-c551-4cf1-9c04-55f559aaaa01');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","description":"jyMJi1osniwzvMM5724wrvJulOUj4A8M3jM0zpEWete9qDkCIpsjezZ2M4DgCUcWaYN25M17e8QItVUDPdnGbbjUMIkwxnSAoHyUqS2WrdyexDJw4m5W5NSAarqtGtlcKJp9gTWhEWSlBiVnl9lORTBFy0IWWO4H8KmbVB2M5EGOl","status":"enabled","point_expires_at":"2024-07-23T20:27:09.000000+09:00","point_expires_in_days":5785,"is_exclusive":false,"subject":"all","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[],"applicable_days_of_week":[2,1,6,6,3,3,6],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["738c740b-0e38-4c0c-a0f3-35f297ba7f37","8dc17a74-ee09-49bb-8941-dd6000861ba6","04c1aee4-d82b-4d41-ad32-a747e4c1a4e6"],"minimum_number_for_combination_purchase":5181,"dest_private_money_id":"eb421fc3-c551-4cf1-9c04-55f559aaaa01"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test14() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        CreateCampaign request = new CreateCampaign(
            'qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ',
            '8c970d1e-8c7b-4834-8d32-3e57e49427ca',
            '2025-01-22T03:35:55.000000+09:00',
            '2024-02-18T00:23:50.000000+09:00',
            4542,
            'external-transaction'
        )
                .bearPointShopId('4b61f708-4996-4ab6-9027-5bd6e15e1a2f')
                .description('Wox7elCTfrAqAyLdOvPV5cpp3AIIQZmW74G7CnNpvzFPpYINeb1rEwkSNbZUKM9QJifASeEjt7rgfB4dUvUA5MkBayzjLixvqernP2ia0JTvsqFBudbGeZdEPGzzDd2lyZr3fyGm4G1h2gpnMz4EtR2vopXxSWiIg6gduAWVf')
                .status('disabled')
                .pointExpiresAt('2024-03-22T05:33:24.000000+09:00')
                .pointExpiresInDays(9099)
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4})
                .productBasedPointRules(new Object[]{items5,items6,items7})
                .applicableDaysOfWeek(new Integer[]{5,1,4})
                .applicableTimeRanges(new Object[]{})
                .applicableShopIds(new String[]{'99ac65c7-a4a0-4d85-a036-c47ec35a3b34','83f72cf3-2991-41e2-868f-ff66344e15e2','613a8374-7bec-4a9b-810c-0593850481c3','bc27664d-fea2-4e93-9f49-7ed2251ed815','35fad519-2dc4-43c4-ad37-c0f349b96d65'})
                .minimumNumberForCombinationPurchase(4857)
                .destPrivateMoneyId('e03fae62-9fac-425b-bf52-b9147081cff9');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/campaigns', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"name":"qpvEXvT4G0zj9vSzfdqnwxVoVRAJZtMnbN2adZxWSJweQkjDaZNU8iBur4dbIER6acqYlwDJKQEp9D3oXWbniSWqI7xTzrPkAXyiXMztQxtJ","private_money_id":"8c970d1e-8c7b-4834-8d32-3e57e49427ca","starts_at":"2025-01-22T03:35:55.000000+09:00","ends_at":"2024-02-18T00:23:50.000000+09:00","priority":4542,"event":"external-transaction","bear_point_shop_id":"4b61f708-4996-4ab6-9027-5bd6e15e1a2f","description":"Wox7elCTfrAqAyLdOvPV5cpp3AIIQZmW74G7CnNpvzFPpYINeb1rEwkSNbZUKM9QJifASeEjt7rgfB4dUvUA5MkBayzjLixvqernP2ia0JTvsqFBudbGeZdEPGzzDd2lyZr3fyGm4G1h2gpnMz4EtR2vopXxSWiIg6gduAWVf","status":"disabled","point_expires_at":"2024-03-22T05:33:24.000000+09:00","point_expires_in_days":9099,"is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[5,1,4],"applicable_time_ranges":[],"applicable_shop_ids":["99ac65c7-a4a0-4d85-a036-c47ec35a3b34","83f72cf3-2991-41e2-868f-ff66344e15e2","613a8374-7bec-4a9b-810c-0593850481c3","bc27664d-fea2-4e93-9f49-7ed2251ed815","35fad519-2dc4-43c4-ad37-c0f349b96d65"],"minimum_number_for_combination_purchase":4857,"dest_private_money_id":"e03fae62-9fac-425b-bf52-b9147081cff9"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
}
