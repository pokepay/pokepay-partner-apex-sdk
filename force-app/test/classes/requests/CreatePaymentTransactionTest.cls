// DO NOT EDIT: File is generated by code generator.

@isTest
private class CreatePaymentTransactionTest {
    @isTest static void test0() {
        CreatePaymentTransaction request = new CreatePaymentTransaction(
            '94de7542-bfe3-45b9-aecd-fa0647992cdd',
            '530342ef-8b3d-490c-ab75-03c22b9c1a68',
            '193d4744-2333-4800-b8fb-d9e17649b593',
            698
        );
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/transactions/payment', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"shop_id":"94de7542-bfe3-45b9-aecd-fa0647992cdd","customer_id":"530342ef-8b3d-490c-ab75-03c22b9c1a68","private_money_id":"193d4744-2333-4800-b8fb-d9e17649b593","amount":698}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), TransactionDetail.class, 'Test getRequestClass');
    }
    @isTest static void test1() {
        CreatePaymentTransaction request = new CreatePaymentTransaction(
            '94de7542-bfe3-45b9-aecd-fa0647992cdd',
            '530342ef-8b3d-490c-ab75-03c22b9c1a68',
            '193d4744-2333-4800-b8fb-d9e17649b593',
            698
        )
                .requestId('b950ea88-8079-4844-a292-7646231f317b');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/transactions/payment', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"shop_id":"94de7542-bfe3-45b9-aecd-fa0647992cdd","customer_id":"530342ef-8b3d-490c-ab75-03c22b9c1a68","private_money_id":"193d4744-2333-4800-b8fb-d9e17649b593","amount":698,"request_id":"b950ea88-8079-4844-a292-7646231f317b"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), TransactionDetail.class, 'Test getRequestClass');
    }
    @isTest static void test2() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        CreatePaymentTransaction request = new CreatePaymentTransaction(
            '94de7542-bfe3-45b9-aecd-fa0647992cdd',
            '530342ef-8b3d-490c-ab75-03c22b9c1a68',
            '193d4744-2333-4800-b8fb-d9e17649b593',
            698
        )
                .products(new Object[]{items,items2,items3,items4,items5,items6,items7,items8,items9})
                .requestId('59c7e31f-7964-49a5-a0d1-314148017ce4');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/transactions/payment', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"shop_id":"94de7542-bfe3-45b9-aecd-fa0647992cdd","customer_id":"530342ef-8b3d-490c-ab75-03c22b9c1a68","private_money_id":"193d4744-2333-4800-b8fb-d9e17649b593","amount":698,"products":[{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}],"request_id":"59c7e31f-7964-49a5-a0d1-314148017ce4"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), TransactionDetail.class, 'Test getRequestClass');
    }
    @isTest static void test3() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        CreatePaymentTransaction request = new CreatePaymentTransaction(
            '94de7542-bfe3-45b9-aecd-fa0647992cdd',
            '530342ef-8b3d-490c-ab75-03c22b9c1a68',
            '193d4744-2333-4800-b8fb-d9e17649b593',
            698
        )
                .metadata('{"key":"value"}')
                .products(new Object[]{items,items2,items3,items4,items5,items6,items7})
                .requestId('f76cd40e-e4a9-4d56-88e2-ef0262e7842f');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/transactions/payment', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"shop_id":"94de7542-bfe3-45b9-aecd-fa0647992cdd","customer_id":"530342ef-8b3d-490c-ab75-03c22b9c1a68","private_money_id":"193d4744-2333-4800-b8fb-d9e17649b593","amount":698,"metadata":"{\"key\":\"value\"}","products":[{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}],"request_id":"f76cd40e-e4a9-4d56-88e2-ef0262e7842f"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), TransactionDetail.class, 'Test getRequestClass');
    }
    @isTest static void test4() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}');
        CreatePaymentTransaction request = new CreatePaymentTransaction(
            '94de7542-bfe3-45b9-aecd-fa0647992cdd',
            '530342ef-8b3d-490c-ab75-03c22b9c1a68',
            '193d4744-2333-4800-b8fb-d9e17649b593',
            698
        )
                .description('jdKodnIqsg2hwfCC3ynrJLnPSb5d8avvWNGGZpHcQub7jyKGPEze4eDg0kaj205Q9Vfs0xgdWl')
                .metadata('{"key":"value"}')
                .products(new Object[]{items,items2,items3,items4,items5})
                .requestId('e0eaa60c-2d59-406a-9ad2-51288ecb3df1');
        
        System.assertEquals(request.method(), 'POST', 'Test method');
        System.assertEquals(request.path(), '/transactions/payment', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"shop_id":"94de7542-bfe3-45b9-aecd-fa0647992cdd","customer_id":"530342ef-8b3d-490c-ab75-03c22b9c1a68","private_money_id":"193d4744-2333-4800-b8fb-d9e17649b593","amount":698,"description":"jdKodnIqsg2hwfCC3ynrJLnPSb5d8avvWNGGZpHcQub7jyKGPEze4eDg0kaj205Q9Vfs0xgdWl","metadata":"{\"key\":\"value\"}","products":[{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"},{"jan_code":"abc","name":"name1","unit_price":100,"price":100,"is_discounted":false,"other":"{}"}],"request_id":"e0eaa60c-2d59-406a-9ad2-51288ecb3df1"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), TransactionDetail.class, 'Test getRequestClass');
    }
}
