// DO NOT EDIT: File is generated by code generator.

@isTest
private class ListTransactionsTest {
    @isTest static void test0() {
        ListTransactions request = new ListTransactions();
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test1() {
        ListTransactions request = new ListTransactions()
                .description('fz9yEelMoF9a26c2RLHzQWOO42l0o0g8SXRzZ3pUKHHeXuuwg12Ygg3AsTOryINKyRmJ3gWCDcmsuvkMrJePtGFhv4aIw1aGtGR3fEQezBo8XnXONHGXDMcl8tuhVdB5KkP8PHvZEmmcBKkGsr9sdEDTBkey7pr4d2jpaf36YY6mrG9Y2ztoKUUUx5B1bSO8xEgn');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"description":"fz9yEelMoF9a26c2RLHzQWOO42l0o0g8SXRzZ3pUKHHeXuuwg12Ygg3AsTOryINKyRmJ3gWCDcmsuvkMrJePtGFhv4aIw1aGtGR3fEQezBo8XnXONHGXDMcl8tuhVdB5KkP8PHvZEmmcBKkGsr9sdEDTBkey7pr4d2jpaf36YY6mrG9Y2ztoKUUUx5B1bSO8xEgn"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test2() {
        ListTransactions request = new ListTransactions()
                .types(new String[]{})
                .description('dnWTCVmm3x115QsBZT6dCGgqZsePkl6iY0bdXM6Nza2rTctUJQmh0gNd3qkWY4lVW5zCUF3zWzIdrHm6OsiyHBxsWBtx4G7cLViMByCBNzcDCX5bbsPzVUGeD2BWp2XUNEsAtEjlivj0');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"types":[],"description":"dnWTCVmm3x115QsBZT6dCGgqZsePkl6iY0bdXM6Nza2rTctUJQmh0gNd3qkWY4lVW5zCUF3zWzIdrHm6OsiyHBxsWBtx4G7cLViMByCBNzcDCX5bbsPzVUGeD2BWp2XUNEsAtEjlivj0"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test3() {
        ListTransactions request = new ListTransactions()
                .setModified(true)
                .types(new String[]{'payment','topup','exchange_inflow','expire'})
                .description('savWYZd');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"is_modified":true,"types":["payment","topup","exchange_inflow","expire"],"description":"savWYZd"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test4() {
        ListTransactions request = new ListTransactions()
                .privateMoneyId('31b240f5-c0f5-43af-8a06-752a499132d8')
                .setModified(false)
                .types(new String[]{'topup','payment','exchange_outflow','cashback','expire'})
                .description('rJdAnnKPkjJzRbGyuQY');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"private_money_id":"31b240f5-c0f5-43af-8a06-752a499132d8","is_modified":false,"types":["topup","payment","exchange_outflow","cashback","expire"],"description":"rJdAnnKPkjJzRbGyuQY"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test5() {
        ListTransactions request = new ListTransactions()
                .organizationCode('v2-b-3-9')
                .privateMoneyId('667bdd6c-69ad-4b07-a3a5-33909b4ced20')
                .setModified(false)
                .types(new String[]{'exchange_inflow','topup','expire','exchange_outflow'})
                .description('rGdF8qpLKYfd3JbJX5QcdKyJ1DmsToKu4w1tRUaP7awM87Mt7bWysOyzqkBrGaMjb1sugqjEeek3DeIDBfKsRBbYLkU2TfJXzuBqGFPReFsmxaxT8Xwuc649dznjsqwxML0aHpiMuF');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"organization_code":"v2-b-3-9","private_money_id":"667bdd6c-69ad-4b07-a3a5-33909b4ced20","is_modified":false,"types":["exchange_inflow","topup","expire","exchange_outflow"],"description":"rGdF8qpLKYfd3JbJX5QcdKyJ1DmsToKu4w1tRUaP7awM87Mt7bWysOyzqkBrGaMjb1sugqjEeek3DeIDBfKsRBbYLkU2TfJXzuBqGFPReFsmxaxT8Xwuc649dznjsqwxML0aHpiMuF"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test6() {
        ListTransactions request = new ListTransactions()
                .transactionId('fba869fc-22cc-42b9-9831-3d379df857ec')
                .organizationCode('')
                .privateMoneyId('087f3ddf-b08a-4e0c-99db-13f934722492')
                .setModified(false)
                .types(new String[]{'exchange_outflow','payment'})
                .description('d5RKAlbrPQ0st0t7yJcv8GqBqgGEHafl1jNP9k7uydClg9A7an27Pr');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"transaction_id":"fba869fc-22cc-42b9-9831-3d379df857ec","organization_code":"","private_money_id":"087f3ddf-b08a-4e0c-99db-13f934722492","is_modified":false,"types":["exchange_outflow","payment"],"description":"d5RKAlbrPQ0st0t7yJcv8GqBqgGEHafl1jNP9k7uydClg9A7an27Pr"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test7() {
        ListTransactions request = new ListTransactions()
                .terminalId('185210d6-9e90-4fbf-b8c2-a1a201d24bf1')
                .transactionId('f1098f69-3b14-47c5-b9a9-6a59644f5219')
                .organizationCode('9--YG7l1m-')
                .privateMoneyId('87954ae7-15b3-4fe7-9dd0-b6a77d1c7325')
                .setModified(true)
                .types(new String[]{'topup','expire','cashback','exchange_outflow','exchange_inflow'})
                .description('q0FFntKGY10p27NPGQTdAXKNGuLNgDO4Ma1ptA22IkyjkgPuZUMAq2NjJocNYKTrm');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"terminal_id":"185210d6-9e90-4fbf-b8c2-a1a201d24bf1","transaction_id":"f1098f69-3b14-47c5-b9a9-6a59644f5219","organization_code":"9--YG7l1m-","private_money_id":"87954ae7-15b3-4fe7-9dd0-b6a77d1c7325","is_modified":true,"types":["topup","expire","cashback","exchange_outflow","exchange_inflow"],"description":"q0FFntKGY10p27NPGQTdAXKNGuLNgDO4Ma1ptA22IkyjkgPuZUMAq2NjJocNYKTrm"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test8() {
        ListTransactions request = new ListTransactions()
                .customerName('2m1ssPqyT3XyCFCrR8uZnHFgU1ZOwuoeukDxIIOg9CcbCgtxt4qQAP06TDLYKBc2zPf6wToG8lTKcMPiFJX3LNKTomMc8wnROYRP673oHx5N3DOO7AdxANDE2ea2N2bsCq')
                .terminalId('d5c7e325-50f8-440d-a026-0f517bb9816b')
                .transactionId('50e4d16b-97b2-4fae-ac41-c54709de7035')
                .organizationCode('m137724--sgY-1-N2Bvb')
                .privateMoneyId('6dc2d400-e2bf-4f84-9409-6125002fa57f')
                .setModified(true)
                .types(new String[]{'cashback','expire'})
                .description('kgSmtEHAWzKVmwmq');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"customer_name":"2m1ssPqyT3XyCFCrR8uZnHFgU1ZOwuoeukDxIIOg9CcbCgtxt4qQAP06TDLYKBc2zPf6wToG8lTKcMPiFJX3LNKTomMc8wnROYRP673oHx5N3DOO7AdxANDE2ea2N2bsCq","terminal_id":"d5c7e325-50f8-440d-a026-0f517bb9816b","transaction_id":"50e4d16b-97b2-4fae-ac41-c54709de7035","organization_code":"m137724--sgY-1-N2Bvb","private_money_id":"6dc2d400-e2bf-4f84-9409-6125002fa57f","is_modified":true,"types":["cashback","expire"],"description":"kgSmtEHAWzKVmwmq"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test9() {
        ListTransactions request = new ListTransactions()
                .customerId('43c280ce-6734-4f61-b801-686033dfc760')
                .customerName('Q1Fha0o1JxRbdO7sJMkOiIt9zNKCX0VzisXLLiEpULitiIsW57')
                .terminalId('4b797c6f-d264-40bc-a94f-5548e35231e8')
                .transactionId('9f5b7b53-de27-4786-8995-d506e00f2e90')
                .organizationCode('2-NY')
                .privateMoneyId('06898eb6-e01f-401c-a155-a746032d4134')
                .setModified(true)
                .types(new String[]{'payment','topup'})
                .description('aAY4yQaiw0JpUpNfjrUKaUCU4cuncfOgZgC0vnz9vdHX3zI21M9POKUqkrXt');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"customer_id":"43c280ce-6734-4f61-b801-686033dfc760","customer_name":"Q1Fha0o1JxRbdO7sJMkOiIt9zNKCX0VzisXLLiEpULitiIsW57","terminal_id":"4b797c6f-d264-40bc-a94f-5548e35231e8","transaction_id":"9f5b7b53-de27-4786-8995-d506e00f2e90","organization_code":"2-NY","private_money_id":"06898eb6-e01f-401c-a155-a746032d4134","is_modified":true,"types":["payment","topup"],"description":"aAY4yQaiw0JpUpNfjrUKaUCU4cuncfOgZgC0vnz9vdHX3zI21M9POKUqkrXt"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test10() {
        ListTransactions request = new ListTransactions()
                .shopId('c2e2869b-b141-45e5-8c6d-c83e456c7a45')
                .customerId('6849cabe-832d-48d2-b184-6600d6dcecd8')
                .customerName('5bwDROtzb2hizqeaCyQXA4kt1s5IzgftNOCeiOWbpouk4VaYSYsKX6oU3L46cfTNsJ74FdhPrGorQztiuURWZ5r1OnryKkdpmMzmoITgipjScgSjEKEvn9tkKJsfEeEirDJBvMOLUpWvpkfaBwAHAugbJ1KgmPImdwaTBcNwqaqeRCH16a6zzUqrHdosHdbmLywqukvEUDGTtuu5mLHhGQ9yekqoy')
                .terminalId('3f53c7ce-e2a1-428c-8cdb-a791bb504ecb')
                .transactionId('1cfd894e-50b2-48e8-b7a4-14170f7de73a')
                .organizationCode('1M')
                .privateMoneyId('1119966c-fa6f-49fc-83cc-f2a120dc4afc')
                .setModified(false)
                .types(new String[]{'payment','topup'})
                .description('ZGwTADg0EGo2tY0BvAArU4c3Hcr3rYtMZs1YhEQlphw1DkmThPoIdPA7X1r8JTPyIk7mw82VAIRkHcNMgqN77FQwuiGtQW4pnFSkfz0ZAYuHKErS89ga8rAwXpAiqwTxt1HL4wWzmkMDA4SVfWD13Zj3');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"shop_id":"c2e2869b-b141-45e5-8c6d-c83e456c7a45","customer_id":"6849cabe-832d-48d2-b184-6600d6dcecd8","customer_name":"5bwDROtzb2hizqeaCyQXA4kt1s5IzgftNOCeiOWbpouk4VaYSYsKX6oU3L46cfTNsJ74FdhPrGorQztiuURWZ5r1OnryKkdpmMzmoITgipjScgSjEKEvn9tkKJsfEeEirDJBvMOLUpWvpkfaBwAHAugbJ1KgmPImdwaTBcNwqaqeRCH16a6zzUqrHdosHdbmLywqukvEUDGTtuu5mLHhGQ9yekqoy","terminal_id":"3f53c7ce-e2a1-428c-8cdb-a791bb504ecb","transaction_id":"1cfd894e-50b2-48e8-b7a4-14170f7de73a","organization_code":"1M","private_money_id":"1119966c-fa6f-49fc-83cc-f2a120dc4afc","is_modified":false,"types":["payment","topup"],"description":"ZGwTADg0EGo2tY0BvAArU4c3Hcr3rYtMZs1YhEQlphw1DkmThPoIdPA7X1r8JTPyIk7mw82VAIRkHcNMgqN77FQwuiGtQW4pnFSkfz0ZAYuHKErS89ga8rAwXpAiqwTxt1HL4wWzmkMDA4SVfWD13Zj3"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test11() {
        ListTransactions request = new ListTransactions()
                .perPage(5035)
                .shopId('05d41a88-30cc-41ba-b944-d7bbd478a09e')
                .customerId('ec2cd086-a29d-413f-86d1-0bd0a796af1d')
                .customerName('Yajb0tVdWE')
                .terminalId('8e9e06a0-31e4-4b8b-a674-c75edaae152d')
                .transactionId('64b82fcc-aeb2-440d-a099-9eff7a11c27c')
                .organizationCode('RZ-Cwduc')
                .privateMoneyId('a71799aa-0cf2-4d48-8877-3113f5bf8b9c')
                .setModified(false)
                .types(new String[]{})
                .description('BOJZocfpIFBg2EP1IMpzVlOR0ZjHbJ4pIYeH1mIjK91BovJNiyan2Rg9xEgMU');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"per_page":5035,"shop_id":"05d41a88-30cc-41ba-b944-d7bbd478a09e","customer_id":"ec2cd086-a29d-413f-86d1-0bd0a796af1d","customer_name":"Yajb0tVdWE","terminal_id":"8e9e06a0-31e4-4b8b-a674-c75edaae152d","transaction_id":"64b82fcc-aeb2-440d-a099-9eff7a11c27c","organization_code":"RZ-Cwduc","private_money_id":"a71799aa-0cf2-4d48-8877-3113f5bf8b9c","is_modified":false,"types":[],"description":"BOJZocfpIFBg2EP1IMpzVlOR0ZjHbJ4pIYeH1mIjK91BovJNiyan2Rg9xEgMU"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test12() {
        ListTransactions request = new ListTransactions()
                .page(617)
                .perPage(8906)
                .shopId('41186e5e-dbd2-4aba-b942-2e9f9fe8b430')
                .customerId('a961204c-b008-4b71-8421-9ea7a6474737')
                .customerName('8Ljil9JSMA7rA7mkLLtmKfguDK2IgQjODYIDOJbPEulQIvNSkQALktsxpQNr6y6a28m0nRuldHpSuEUpdPie9qQ2GFfC0at9jn8DwInc5YWbNc2E2NkkIcBn5byBGxSlhAbqrppUqGdxMolEMce2oIWkzh6xh3kO5wXHuEli1NcEVyTrbdyJqmh3WRfGT9d54NzUibZax1gbEqwtEhHNUjZJEl7H6aHeFVmJSAKrLNuNDUQhJfNq76RxAux')
                .terminalId('dc544153-443a-4529-ac24-7e986d83aa2a')
                .transactionId('da50bf2d-f156-425b-b292-4913221ffb18')
                .organizationCode('j-MjC5VwsAv9')
                .privateMoneyId('8f0852cc-1e8d-4261-a4ba-9cb0f1005add')
                .setModified(true)
                .types(new String[]{'topup'})
                .description('R1myjYzFL4j0HTXKtxMi6tvMf7GbuKVOo81owGN6i0XTT33lqYdKQ0h3ghVZk7eOE9tcwx8MOKl5MRsa1MFEYPOVzvPSXDUkbgX2oBshUtXGZ9lfp9TwgYPOmismihXWyqdhqoMR6oAdT5yPsPRTmUYdZdYDDGZDuZn0XgqQIqTu14tSh13');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"page":617,"per_page":8906,"shop_id":"41186e5e-dbd2-4aba-b942-2e9f9fe8b430","customer_id":"a961204c-b008-4b71-8421-9ea7a6474737","customer_name":"8Ljil9JSMA7rA7mkLLtmKfguDK2IgQjODYIDOJbPEulQIvNSkQALktsxpQNr6y6a28m0nRuldHpSuEUpdPie9qQ2GFfC0at9jn8DwInc5YWbNc2E2NkkIcBn5byBGxSlhAbqrppUqGdxMolEMce2oIWkzh6xh3kO5wXHuEli1NcEVyTrbdyJqmh3WRfGT9d54NzUibZax1gbEqwtEhHNUjZJEl7H6aHeFVmJSAKrLNuNDUQhJfNq76RxAux","terminal_id":"dc544153-443a-4529-ac24-7e986d83aa2a","transaction_id":"da50bf2d-f156-425b-b292-4913221ffb18","organization_code":"j-MjC5VwsAv9","private_money_id":"8f0852cc-1e8d-4261-a4ba-9cb0f1005add","is_modified":true,"types":["topup"],"description":"R1myjYzFL4j0HTXKtxMi6tvMf7GbuKVOo81owGN6i0XTT33lqYdKQ0h3ghVZk7eOE9tcwx8MOKl5MRsa1MFEYPOVzvPSXDUkbgX2oBshUtXGZ9lfp9TwgYPOmismihXWyqdhqoMR6oAdT5yPsPRTmUYdZdYDDGZDuZn0XgqQIqTu14tSh13"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test13() {
        ListTransactions request = new ListTransactions()
                .to('2020-01-01T06:35:57.000000+09:00')
                .page(768)
                .perPage(1989)
                .shopId('9eda9587-4fa1-47d9-a402-c452f6d418dd')
                .customerId('2a13021b-8d15-4554-9722-d41c511f4e3a')
                .customerName('bMgZiB4q5yXIKvcyeytZUeCOzn479Q7e7CQ6mogsi4OQ6jQwMdVQzET3CTZR3naadmHoO937wRncWgLEMvwuXtyGneCNJhR9grzsET9HHziGJ2iqEYWh5QfKEnNvZa51B6RuNHWw3kkEIImb7878ag0GpEoXRZP9Tuo6ihkLtNpmjVgJl2arbhJouxWQ6FlBm7k1iTzlm9ILQGKVJoUCSY35cdkgvsb')
                .terminalId('522b2999-321e-4006-81d9-6fc35a4e6b62')
                .transactionId('c2b038e1-5f45-4bde-886a-bb54b6ab87c8')
                .organizationCode('975--xB-9fI-x-sG27-OZ')
                .privateMoneyId('e3927343-efdd-4dcf-b3ba-66bed9847a47')
                .setModified(false)
                .types(new String[]{})
                .description('v7doxpRjgZI2VSDvLJkkZMMdEANfWVavAje3PJg4zkA5dwRQrAEDCEBzCTk0pNAGkxkj3y6QjLE9oTv9S3Zg4O5dK9OBTn3gY0HIwJr5Xn6R9PIw5eC52tvIBnMyMg4CnT2dj7ORUTt4jEgn4792da7QYy7V605lzcBixerwgOsZo2');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"to":"2020-01-01T06:35:57.000000+09:00","page":768,"per_page":1989,"shop_id":"9eda9587-4fa1-47d9-a402-c452f6d418dd","customer_id":"2a13021b-8d15-4554-9722-d41c511f4e3a","customer_name":"bMgZiB4q5yXIKvcyeytZUeCOzn479Q7e7CQ6mogsi4OQ6jQwMdVQzET3CTZR3naadmHoO937wRncWgLEMvwuXtyGneCNJhR9grzsET9HHziGJ2iqEYWh5QfKEnNvZa51B6RuNHWw3kkEIImb7878ag0GpEoXRZP9Tuo6ihkLtNpmjVgJl2arbhJouxWQ6FlBm7k1iTzlm9ILQGKVJoUCSY35cdkgvsb","terminal_id":"522b2999-321e-4006-81d9-6fc35a4e6b62","transaction_id":"c2b038e1-5f45-4bde-886a-bb54b6ab87c8","organization_code":"975--xB-9fI-x-sG27-OZ","private_money_id":"e3927343-efdd-4dcf-b3ba-66bed9847a47","is_modified":false,"types":[],"description":"v7doxpRjgZI2VSDvLJkkZMMdEANfWVavAje3PJg4zkA5dwRQrAEDCEBzCTk0pNAGkxkj3y6QjLE9oTv9S3Zg4O5dK9OBTn3gY0HIwJr5Xn6R9PIw5eC52tvIBnMyMg4CnT2dj7ORUTt4jEgn4792da7QYy7V605lzcBixerwgOsZo2"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
    @isTest static void test14() {
        ListTransactions request = new ListTransactions()
                .startFrom('2020-08-21T15:45:13.000000+09:00')
                .to('2019-10-16T04:29:54.000000+09:00')
                .page(8281)
                .perPage(1294)
                .shopId('3fee9f69-a92a-4f69-bffe-82e67ba9bc20')
                .customerId('7f7bfcd0-bfa3-457b-b724-3af99ea2ed45')
                .customerName('kMTjwK5UmBamQcUvvHD25XYGaGoRmlkWpVKSQYACWhdJgT5oXIAxp1c5Q2vG7By91KC2xkwbMvROWfUAh')
                .terminalId('88d2f9e8-9736-4fd8-ae19-df5a7c7937fa')
                .transactionId('3bc07017-9a90-4f04-9c84-bbb019e87ef9')
                .organizationCode('5WSN3A1j-2')
                .privateMoneyId('fdeae818-91d6-43ab-bf78-d8ba487938a4')
                .setModified(false)
                .types(new String[]{'exchange_inflow','exchange_outflow','cashback','topup','payment','expire'})
                .description('z0TuA7dLQ8GnuuGnm3um0ZKYlqHYAPfacx4ba4pxXiFCicQd3QQrdtpp5IlW8KnTaroT8w3801ZxeZpTa0FFkkUFLVCDKp9TvCsVFg3Dy6t9FVfvRBKOl2QQeBI5NM6J7EhkzGk22yYle2ZOPXJOiEYcNwwBKhoxCdqw8SDS6L7O6ohLm8');
        
        System.assertEquals(request.method(), 'GET', 'Test method');
        System.assertEquals(request.path(), '/transactions', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"from":"2020-08-21T15:45:13.000000+09:00","to":"2019-10-16T04:29:54.000000+09:00","page":8281,"per_page":1294,"shop_id":"3fee9f69-a92a-4f69-bffe-82e67ba9bc20","customer_id":"7f7bfcd0-bfa3-457b-b724-3af99ea2ed45","customer_name":"kMTjwK5UmBamQcUvvHD25XYGaGoRmlkWpVKSQYACWhdJgT5oXIAxp1c5Q2vG7By91KC2xkwbMvROWfUAh","terminal_id":"88d2f9e8-9736-4fd8-ae19-df5a7c7937fa","transaction_id":"3bc07017-9a90-4f04-9c84-bbb019e87ef9","organization_code":"5WSN3A1j-2","private_money_id":"fdeae818-91d6-43ab-bf78-d8ba487938a4","is_modified":false,"types":["exchange_inflow","exchange_outflow","cashback","topup","payment","expire"],"description":"z0TuA7dLQ8GnuuGnm3um0ZKYlqHYAPfacx4ba4pxXiFCicQd3QQrdtpp5IlW8KnTaroT8w3801ZxeZpTa0FFkkUFLVCDKp9TvCsVFg3Dy6t9FVfvRBKOl2QQeBI5NM6J7EhkzGk22yYle2ZOPXJOiEYcNwwBKhoxCdqw8SDS6L7O6ohLm8"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), PaginatedTransaction.class, 'Test getRequestClass');
    }
}
