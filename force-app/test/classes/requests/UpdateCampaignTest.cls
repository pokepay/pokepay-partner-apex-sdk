// DO NOT EDIT: File is generated by code generator.

@isTest
private class UpdateCampaignTest {
    @isTest static void test0() {
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        );
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059"}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test1() {
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .minimumNumberForCombinationPurchase(7210);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","minimum_number_for_combination_purchase":7210}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test2() {
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .applicableShopIds(new String[]{'791106bd-8294-4846-9e84-5cc251003e67'})
                .minimumNumberForCombinationPurchase(2831);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","applicable_shop_ids":["791106bd-8294-4846-9e84-5cc251003e67"],"minimum_number_for_combination_purchase":2831}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test3() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .applicableTimeRanges(new Object[]{items,items2,items3,items4,items5,items6,items7})
                .applicableShopIds(new String[]{'be638927-1030-409b-bb87-ad9bc82736db','fb88ea7d-810a-4b72-8c82-ad9a27b77247','66821da9-851b-4237-8de9-1329c36ec483','aa2c1ef8-a2f7-4806-b872-eb80db538803','9614a1f5-802c-466d-9839-70ec03d65f50','421525c6-0afd-4b36-bba5-f08a774f7b97','07ab4707-547b-4cf0-b85e-b46f5f8b3e32','fd81960e-c279-44fe-b1b1-bf8c8a003c3b','2d1f671e-dad9-41f2-a79c-9ff402498686','e013118c-4b34-46cc-907c-a94334cf671e'})
                .minimumNumberForCombinationPurchase(4961);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["be638927-1030-409b-bb87-ad9bc82736db","fb88ea7d-810a-4b72-8c82-ad9a27b77247","66821da9-851b-4237-8de9-1329c36ec483","aa2c1ef8-a2f7-4806-b872-eb80db538803","9614a1f5-802c-466d-9839-70ec03d65f50","421525c6-0afd-4b36-bba5-f08a774f7b97","07ab4707-547b-4cf0-b85e-b46f5f8b3e32","fd81960e-c279-44fe-b1b1-bf8c8a003c3b","2d1f671e-dad9-41f2-a79c-9ff402498686","e013118c-4b34-46cc-907c-a94334cf671e"],"minimum_number_for_combination_purchase":4961}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test4() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .applicableDaysOfWeek(new Integer[]{2,4,3,1,0,2,5,6})
                .applicableTimeRanges(new Object[]{items,items2,items3})
                .applicableShopIds(new String[]{'dd76dfb2-b206-4085-904d-efe34030a36f','7bd1b7e5-d549-48a7-b42f-5354a258e3df','61436ea9-9dd6-4a3f-8c7f-0ca90b7ca4e3','105fef57-8113-43df-ab2f-59fdae2c0294','3398631b-a07d-4706-a678-f30703b49c86','aea5e6d8-9285-4b16-87e9-e8a0e1477d80','56e107fe-1d94-4ce8-a581-91f8b6ab7cd1'})
                .minimumNumberForCombinationPurchase(2197);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","applicable_days_of_week":[2,4,3,1,0,2,5,6],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["dd76dfb2-b206-4085-904d-efe34030a36f","7bd1b7e5-d549-48a7-b42f-5354a258e3df","61436ea9-9dd6-4a3f-8c7f-0ca90b7ca4e3","105fef57-8113-43df-ab2f-59fdae2c0294","3398631b-a07d-4706-a678-f30703b49c86","aea5e6d8-9285-4b16-87e9-e8a0e1477d80","56e107fe-1d94-4ce8-a581-91f8b6ab7cd1"],"minimum_number_for_combination_purchase":2197}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test5() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .productBasedPointRules(new Object[]{})
                .applicableDaysOfWeek(new Integer[]{})
                .applicableTimeRanges(new Object[]{items,items2,items3})
                .applicableShopIds(new String[]{'1958176c-295e-4310-b385-a1b1ca9006ac','40e66473-85c5-4fb7-9b42-20a4fbd2c626','4077aec8-5f55-484c-a35a-329003d25b60','a659b051-8a74-467d-97d7-b8e6bfb4ee61','df6646c4-1ebd-4534-8672-ffd78e139f17','be0e78ac-fd5a-4842-a8b2-f547cd4c2d8d','ab9a539a-2887-435d-8910-ebedfbd9147f'})
                .minimumNumberForCombinationPurchase(8725);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","product_based_point_rules":[],"applicable_days_of_week":[],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["1958176c-295e-4310-b385-a1b1ca9006ac","40e66473-85c5-4fb7-9b42-20a4fbd2c626","4077aec8-5f55-484c-a35a-329003d25b60","a659b051-8a74-467d-97d7-b8e6bfb4ee61","df6646c4-1ebd-4534-8672-ffd78e139f17","be0e78ac-fd5a-4842-a8b2-f547cd4c2d8d","ab9a539a-2887-435d-8910-ebedfbd9147f"],"minimum_number_for_combination_purchase":8725}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test6() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .amountBasedPointRules(new Object[]{items,items2,items3})
                .productBasedPointRules(new Object[]{items4,items5,items6,items7})
                .applicableDaysOfWeek(new Integer[]{6,2,1,6,3,4,0})
                .applicableTimeRanges(new Object[]{items8,items9,items10,items11,items12,items13})
                .applicableShopIds(new String[]{'a18eb990-807a-49ec-905d-04c8ea6ca719','7767ca91-cfe1-4d31-ae5b-dc000e8c8a15','c038a0cf-9fa4-43b6-a670-5ae63c1ccdb4','449f8e68-8a5d-4f39-a2f7-33f3f5ab9cb9','3509ef6b-ac4c-4c6e-9c7c-509d26bca308','eb1f9008-bd6b-49b6-8063-2819910e3ece','bd499962-fa00-42e2-b0a3-0ca0f0786efb','a556d6ca-fd04-4084-8add-6113027b7ca3'})
                .minimumNumberForCombinationPurchase(5457);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[6,2,1,6,3,4,0],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["a18eb990-807a-49ec-905d-04c8ea6ca719","7767ca91-cfe1-4d31-ae5b-dc000e8c8a15","c038a0cf-9fa4-43b6-a670-5ae63c1ccdb4","449f8e68-8a5d-4f39-a2f7-33f3f5ab9cb9","3509ef6b-ac4c-4c6e-9c7c-509d26bca308","eb1f9008-bd6b-49b6-8063-2819910e3ece","bd499962-fa00-42e2-b0a3-0ca0f0786efb","a556d6ca-fd04-4084-8add-6113027b7ca3"],"minimum_number_for_combination_purchase":5457}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test7() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items18 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items19 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items20 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items21 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items22 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items23 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .subject('all')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6})
                .productBasedPointRules(new Object[]{items7,items8,items9,items10,items11,items12,items13,items14,items15})
                .applicableDaysOfWeek(new Integer[]{1,4,3,2,5,1,4,6,3,1})
                .applicableTimeRanges(new Object[]{items16,items17,items18,items19,items20,items21,items22,items23})
                .applicableShopIds(new String[]{'9d96271d-20ab-43ed-84c6-e3353e6554ce','fe616344-bd6d-44dc-9948-de41a032b6d2','4fdd2927-e0a3-4594-beb3-b7ac270585d2','fa7c94c2-3fee-4a4b-ba37-ad1bae000332','f8fdaee6-0eb1-4495-b15d-562fcf18edf0','e902a3ad-6261-4acd-bc9b-522ab24a4c8e','352b0fbe-0ad7-441b-bb8f-69fcbe750034','c5af5b24-e2e8-4447-83d0-a18eab28928d','0ce9f481-8161-4c6e-9798-87863a5b81cf'})
                .minimumNumberForCombinationPurchase(2966);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","subject":"all","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[1,4,3,2,5,1,4,6,3,1],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["9d96271d-20ab-43ed-84c6-e3353e6554ce","fe616344-bd6d-44dc-9948-de41a032b6d2","4fdd2927-e0a3-4594-beb3-b7ac270585d2","fa7c94c2-3fee-4a4b-ba37-ad1bae000332","f8fdaee6-0eb1-4495-b15d-562fcf18edf0","e902a3ad-6261-4acd-bc9b-522ab24a4c8e","352b0fbe-0ad7-441b-bb8f-69fcbe750034","c5af5b24-e2e8-4447-83d0-a18eab28928d","0ce9f481-8161-4c6e-9798-87863a5b81cf"],"minimum_number_for_combination_purchase":2966}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test8() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .setExclusive(false)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8,items9,items10})
                .productBasedPointRules(new Object[]{items11,items12})
                .applicableDaysOfWeek(new Integer[]{6,4,3,5})
                .applicableTimeRanges(new Object[]{items13,items14})
                .applicableShopIds(new String[]{'d9f03d3f-c5c1-4b32-bd85-c975b78c671e','3bac0778-ab64-4d8f-a295-184384cfd70c','567b5df3-15f0-4b81-8c7a-0f0036bdd56e','1b3cb45f-f72b-4cfe-80ef-aa2da3a638e9','1e04db02-3700-45b6-8a61-4b101f5c2e74','640ff7db-46c6-454e-bfd4-9714a504f6e2','2738bd17-a518-4af2-85a5-32105283faa9'})
                .minimumNumberForCombinationPurchase(5059);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","is_exclusive":false,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[6,4,3,5],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["d9f03d3f-c5c1-4b32-bd85-c975b78c671e","3bac0778-ab64-4d8f-a295-184384cfd70c","567b5df3-15f0-4b81-8c7a-0f0036bdd56e","1b3cb45f-f72b-4cfe-80ef-aa2da3a638e9","1e04db02-3700-45b6-8a61-4b101f5c2e74","640ff7db-46c6-454e-bfd4-9714a504f6e2","2738bd17-a518-4af2-85a5-32105283faa9"],"minimum_number_for_combination_purchase":5059}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test9() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .pointExpiresInDays(7152)
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items})
                .productBasedPointRules(new Object[]{items2,items3,items4,items5,items6})
                .applicableDaysOfWeek(new Integer[]{3,2,5,4,3,4,3})
                .applicableTimeRanges(new Object[]{items7,items8,items9,items10,items11,items12,items13})
                .applicableShopIds(new String[]{'7bdacc25-3155-4e4f-a2dc-1ef92b4c67ae'})
                .minimumNumberForCombinationPurchase(5042);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","point_expires_in_days":7152,"is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[3,2,5,4,3,4,3],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["7bdacc25-3155-4e4f-a2dc-1ef92b4c67ae"],"minimum_number_for_combination_purchase":5042}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test10() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items18 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items19 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .pointExpiresAt('2020-10-10T07:12:50.000000+09:00')
                .pointExpiresInDays(2761)
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8,items9})
                .productBasedPointRules(new Object[]{items10,items11,items12,items13,items14,items15,items16,items17})
                .applicableDaysOfWeek(new Integer[]{2,2,5,1,5,2,5,0})
                .applicableTimeRanges(new Object[]{items18,items19})
                .applicableShopIds(new String[]{'4abfb896-4d12-4e0c-a381-3da88ab37398','67f0b895-edf1-4817-9e12-182535ac21d1','0c8e3690-f06e-42fb-915d-0d397c512d28','bb4d6fcc-df90-4f3c-aa3a-ab39d41b3194','420f9b7f-57f5-463e-b131-5872d34eb399'})
                .minimumNumberForCombinationPurchase(7002);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","point_expires_at":"2020-10-10T07:12:50.000000+09:00","point_expires_in_days":2761,"is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[2,2,5,1,5,2,5,0],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["4abfb896-4d12-4e0c-a381-3da88ab37398","67f0b895-edf1-4817-9e12-182535ac21d1","0c8e3690-f06e-42fb-915d-0d397c512d28","bb4d6fcc-df90-4f3c-aa3a-ab39d41b3194","420f9b7f-57f5-463e-b131-5872d34eb399"],"minimum_number_for_combination_purchase":7002}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test11() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .status('disabled')
                .pointExpiresAt('2025-05-26T21:22:34.000000+09:00')
                .pointExpiresInDays(5158)
                .setExclusive(false)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2})
                .productBasedPointRules(new Object[]{items3,items4,items5,items6,items7,items8,items9})
                .applicableDaysOfWeek(new Integer[]{3,3,0,0,6,1,4})
                .applicableTimeRanges(new Object[]{items10,items11,items12,items13,items14,items15,items16,items17})
                .applicableShopIds(new String[]{'d2bb31d1-e7c4-41a5-9a01-4d86b6d03fa0','231e915e-ff65-4993-bf5f-842937b2d7fa','b9109162-3b52-482d-9a3b-1a3bcb7f7d85','a529fa43-4db9-4946-9cf8-321bc90d4966','15a9334e-4fcf-44c9-8148-f02db4c0700f','5145e229-dcf2-4262-ac5c-cb83ecb1e0f0','114924a2-b080-4584-8fa3-d929112ca6f1','bb7928ff-13af-4c13-b61a-8ced1a7a3f7b','6ef23ee3-6d9c-4fd1-922e-36d21abc54a3','a8490d2d-310e-4e4b-87cc-e7b5cc431e09'})
                .minimumNumberForCombinationPurchase(9156);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","status":"disabled","point_expires_at":"2025-05-26T21:22:34.000000+09:00","point_expires_in_days":5158,"is_exclusive":false,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[3,3,0,0,6,1,4],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["d2bb31d1-e7c4-41a5-9a01-4d86b6d03fa0","231e915e-ff65-4993-bf5f-842937b2d7fa","b9109162-3b52-482d-9a3b-1a3bcb7f7d85","a529fa43-4db9-4946-9cf8-321bc90d4966","15a9334e-4fcf-44c9-8148-f02db4c0700f","5145e229-dcf2-4262-ac5c-cb83ecb1e0f0","114924a2-b080-4584-8fa3-d929112ca6f1","bb7928ff-13af-4c13-b61a-8ced1a7a3f7b","6ef23ee3-6d9c-4fd1-922e-36d21abc54a3","a8490d2d-310e-4e4b-87cc-e7b5cc431e09"],"minimum_number_for_combination_purchase":9156}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test12() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .description('G2GPSQQB1U6IjRsZr2eFWgbnzGrBQcbaSK3iX1ZFYsGd1YMLCaCs0F5pkoUcbMvLH')
                .status('disabled')
                .pointExpiresAt('2015-11-03T10:56:01.000000+09:00')
                .pointExpiresInDays(5590)
                .setExclusive(false)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8})
                .productBasedPointRules(new Object[]{items9,items10,items11,items12,items13,items14,items15,items16})
                .applicableDaysOfWeek(new Integer[]{0,3,4,2})
                .applicableTimeRanges(new Object[]{})
                .applicableShopIds(new String[]{})
                .minimumNumberForCombinationPurchase(8786);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","description":"G2GPSQQB1U6IjRsZr2eFWgbnzGrBQcbaSK3iX1ZFYsGd1YMLCaCs0F5pkoUcbMvLH","status":"disabled","point_expires_at":"2015-11-03T10:56:01.000000+09:00","point_expires_in_days":5590,"is_exclusive":false,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[0,3,4,2],"applicable_time_ranges":[],"applicable_shop_ids":[],"minimum_number_for_combination_purchase":8786}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test13() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .event('topup')
                .description('GJELxIJ85m7pWO5Oq5sU8iwoJ735Qje9VnUZQt0pzes3TegY2AoCAs')
                .status('enabled')
                .pointExpiresAt('2017-09-16T17:12:18.000000+09:00')
                .pointExpiresInDays(6084)
                .setExclusive(false)
                .subject('money')
                .amountBasedPointRules(new Object[]{})
                .productBasedPointRules(new Object[]{items,items2,items3,items4,items5})
                .applicableDaysOfWeek(new Integer[]{6})
                .applicableTimeRanges(new Object[]{items6,items7,items8,items9,items10,items11,items12,items13,items14})
                .applicableShopIds(new String[]{'b90aa69b-3802-4a2f-ba1f-62e379c3f10e','390c962d-202d-427d-9b02-f2f5300dd56e','66fa7bba-8d5d-4173-ad2b-15f43d7892ae'})
                .minimumNumberForCombinationPurchase(3676);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","event":"topup","description":"GJELxIJ85m7pWO5Oq5sU8iwoJ735Qje9VnUZQt0pzes3TegY2AoCAs","status":"enabled","point_expires_at":"2017-09-16T17:12:18.000000+09:00","point_expires_in_days":6084,"is_exclusive":false,"subject":"money","amount_based_point_rules":[],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[6],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["b90aa69b-3802-4a2f-ba1f-62e379c3f10e","390c962d-202d-427d-9b02-f2f5300dd56e","66fa7bba-8d5d-4173-ad2b-15f43d7892ae"],"minimum_number_for_combination_purchase":3676}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test14() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items18 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items19 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items20 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items21 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items22 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items23 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items24 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items25 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items26 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items27 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .priority(5095)
                .event('external-transaction')
                .description('EkUDn1nh1J0')
                .status('enabled')
                .pointExpiresAt('2017-06-05T00:04:03.000000+09:00')
                .pointExpiresInDays(9343)
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8,items9})
                .productBasedPointRules(new Object[]{items10,items11,items12,items13,items14,items15,items16,items17,items18})
                .applicableDaysOfWeek(new Integer[]{})
                .applicableTimeRanges(new Object[]{items19,items20,items21,items22,items23,items24,items25,items26,items27})
                .applicableShopIds(new String[]{'b982adb3-af41-4c2b-9e18-73655e561c04','4fe955a5-bb07-4dae-b580-2621059b32cc','dd603dd8-5526-44b1-8ff6-e9748c9a38a4'})
                .minimumNumberForCombinationPurchase(7857);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","priority":5095,"event":"external-transaction","description":"EkUDn1nh1J0","status":"enabled","point_expires_at":"2017-06-05T00:04:03.000000+09:00","point_expires_in_days":9343,"is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["b982adb3-af41-4c2b-9e18-73655e561c04","4fe955a5-bb07-4dae-b580-2621059b32cc","dd603dd8-5526-44b1-8ff6-e9748c9a38a4"],"minimum_number_for_combination_purchase":7857}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test15() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .endsAt('2018-11-02T12:41:17.000000+09:00')
                .priority(1348)
                .event('topup')
                .description('joZ1AHyJK')
                .status('enabled')
                .pointExpiresAt('2021-03-16T00:26:20.000000+09:00')
                .pointExpiresInDays(3023)
                .setExclusive(true)
                .subject('all')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5})
                .productBasedPointRules(new Object[]{items6,items7,items8,items9,items10,items11})
                .applicableDaysOfWeek(new Integer[]{3,2,4})
                .applicableTimeRanges(new Object[]{items12,items13,items14,items15,items16})
                .applicableShopIds(new String[]{'6909d4dd-998b-4b6c-9b4c-9725f3f8abcb','4fcca712-e010-41a0-94f2-942b2ce9c873','8675ce60-de4a-453b-9aa6-23ab527a41da','cf0e98b4-f44c-4812-adde-3ffdb2510b22','95df2873-4164-4a7f-89e6-f2c3a81dd9c3','b9fa6916-c8b8-4fbe-9f75-5e51f18d947d','1693ae2a-2208-4f4c-b58a-bb6dc041f7c3'})
                .minimumNumberForCombinationPurchase(4336);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","ends_at":"2018-11-02T12:41:17.000000+09:00","priority":1348,"event":"topup","description":"joZ1AHyJK","status":"enabled","point_expires_at":"2021-03-16T00:26:20.000000+09:00","point_expires_in_days":3023,"is_exclusive":true,"subject":"all","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[3,2,4],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["6909d4dd-998b-4b6c-9b4c-9725f3f8abcb","4fcca712-e010-41a0-94f2-942b2ce9c873","8675ce60-de4a-453b-9aa6-23ab527a41da","cf0e98b4-f44c-4812-adde-3ffdb2510b22","95df2873-4164-4a7f-89e6-f2c3a81dd9c3","b9fa6916-c8b8-4fbe-9f75-5e51f18d947d","1693ae2a-2208-4f4c-b58a-bb6dc041f7c3"],"minimum_number_for_combination_purchase":4336}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test16() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items9 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items10 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items11 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items12 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items13 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items14 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items15 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items16 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items17 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items18 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        Map<String, Object> items19 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .startsAt('2017-08-17T15:23:09.000000+09:00')
                .endsAt('2016-11-28T12:14:53.000000+09:00')
                .priority(9825)
                .event('external-transaction')
                .description('GEM3GfsC9B0w8zKt6bQig1LgqOPtR6wzZdUh56Q0WZf8IPC7BRlPxu7PJAL2SSr')
                .status('enabled')
                .pointExpiresAt('2016-03-02T12:44:13.000000+09:00')
                .pointExpiresInDays(381)
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5,items6,items7,items8})
                .productBasedPointRules(new Object[]{items9,items10})
                .applicableDaysOfWeek(new Integer[]{3,3,5,6,1,1,6})
                .applicableTimeRanges(new Object[]{items11,items12,items13,items14,items15,items16,items17,items18,items19})
                .applicableShopIds(new String[]{'a9404652-6b61-4459-aac3-2501f4502ad6','c0106a1d-68ad-4438-ab0d-43ca8fdd5ce5','06d3bc66-71c8-4ced-a99f-2667b9b6428d','a23b1ed8-aaf7-4c6c-966f-05bfd929de6d','87d29305-9296-4b4b-900d-66e3bf434016'})
                .minimumNumberForCombinationPurchase(3439);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","starts_at":"2017-08-17T15:23:09.000000+09:00","ends_at":"2016-11-28T12:14:53.000000+09:00","priority":9825,"event":"external-transaction","description":"GEM3GfsC9B0w8zKt6bQig1LgqOPtR6wzZdUh56Q0WZf8IPC7BRlPxu7PJAL2SSr","status":"enabled","point_expires_at":"2016-03-02T12:44:13.000000+09:00","point_expires_in_days":381,"is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[3,3,5,6,1,1,6],"applicable_time_ranges":[{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"},{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["a9404652-6b61-4459-aac3-2501f4502ad6","c0106a1d-68ad-4438-ab0d-43ca8fdd5ce5","06d3bc66-71c8-4ced-a99f-2667b9b6428d","a23b1ed8-aaf7-4c6c-966f-05bfd929de6d","87d29305-9296-4b4b-900d-66e3bf434016"],"minimum_number_for_combination_purchase":3439}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
    @isTest static void test17() {
        Map<String, Object> items =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items2 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items3 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items4 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items5 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}');
        Map<String, Object> items6 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items7 =  (Map<String, Object>) JSON.deserializeUntyped('{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}');
        Map<String, Object> items8 =  (Map<String, Object>) JSON.deserializeUntyped('{"from":"12:00","to":"23:59"}');
        UpdateCampaign request = new UpdateCampaign(
            '4eed50d1-f0f3-4da2-ad79-3155b00d6059'
        )
                .name('p5Z68uiRVcRs6iSVq6CAE1cykbPfFVTBynTVWrp1vTM1qsdO4ANmXuI4pjaa3jMjNf8XzKneiyaJFmKrTqfSFemIMfA7XBmcoIx81EXrZTOXzCYdtNcSc50TRhvcOBTaYtXxGHr5BD')
                .startsAt('2025-06-05T07:10:00.000000+09:00')
                .endsAt('2024-11-22T07:20:44.000000+09:00')
                .priority(339)
                .event('payment')
                .description('0CKWqFPB7cXogK3lXTpk1ACQL5MC28qImQU81piDFRyBs61QA64ubFmiSNG')
                .status('enabled')
                .pointExpiresAt('2025-06-01T09:58:15.000000+09:00')
                .pointExpiresInDays(5080)
                .setExclusive(true)
                .subject('money')
                .amountBasedPointRules(new Object[]{items,items2,items3,items4,items5})
                .productBasedPointRules(new Object[]{items6,items7})
                .applicableDaysOfWeek(new Integer[]{6,2,5,2})
                .applicableTimeRanges(new Object[]{items8})
                .applicableShopIds(new String[]{'9f215cf4-8f6c-40dc-b7ae-97adb5aac95d','63934f23-9271-45c4-8482-c23d8cdb3b6e','f9635b57-a366-4313-84fa-32381c4bd2db','979bb7b3-160b-4449-89b3-76d3eae8d3f3','c2709420-70d6-463e-a285-dcc710cd3b66','4bf9fa57-535a-4553-aa3a-7aaa241d58ca','0cceb69a-3cbe-4f9b-817a-06f4e7cdaa87','c0cb3678-3999-4f06-9deb-612fb5223621','72db667d-a3e9-4ac3-b640-bce47d9b6105'})
                .minimumNumberForCombinationPurchase(4652);
        
        System.assertEquals(request.method(), 'PATCH', 'Test method');
        System.assertEquals(request.path(), '/campaigns/4eed50d1-f0f3-4da2-ad79-3155b00d6059', 'Test path');
        System.assertEquals((Map<String, Object>)JSON.deserializeUntyped(request.getRequestBody()), (Map<String, Object>)JSON.deserializeUntyped('{"campaign_id":"4eed50d1-f0f3-4da2-ad79-3155b00d6059","name":"p5Z68uiRVcRs6iSVq6CAE1cykbPfFVTBynTVWrp1vTM1qsdO4ANmXuI4pjaa3jMjNf8XzKneiyaJFmKrTqfSFemIMfA7XBmcoIx81EXrZTOXzCYdtNcSc50TRhvcOBTaYtXxGHr5BD","starts_at":"2025-06-05T07:10:00.000000+09:00","ends_at":"2024-11-22T07:20:44.000000+09:00","priority":339,"event":"payment","description":"0CKWqFPB7cXogK3lXTpk1ACQL5MC28qImQU81piDFRyBs61QA64ubFmiSNG","status":"enabled","point_expires_at":"2025-06-01T09:58:15.000000+09:00","point_expires_in_days":5080,"is_exclusive":true,"subject":"money","amount_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000},{"point_amount":5,"point_amount_unit":"percent","subject_more_than_or_equal":1000,"subject_less_than":5000}],"product_based_point_rules":[{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2},{"point_amount":5,"point_amount_unit":"percent","product_code":"4912345678904","is_multiply_by_count":true,"required_count":2}],"applicable_days_of_week":[6,2,5,2],"applicable_time_ranges":[{"from":"12:00","to":"23:59"}],"applicable_shop_ids":["9f215cf4-8f6c-40dc-b7ae-97adb5aac95d","63934f23-9271-45c4-8482-c23d8cdb3b6e","f9635b57-a366-4313-84fa-32381c4bd2db","979bb7b3-160b-4449-89b3-76d3eae8d3f3","c2709420-70d6-463e-a285-dcc710cd3b66","4bf9fa57-535a-4553-aa3a-7aaa241d58ca","0cceb69a-3cbe-4f9b-817a-06f4e7cdaa87","c0cb3678-3999-4f06-9deb-612fb5223621","72db667d-a3e9-4ac3-b640-bce47d9b6105"],"minimum_number_for_combination_purchase":4652}'), 'Test getRequestBody');
        System.assertEquals(request.getResponseClass(), Campaign.class, 'Test getRequestClass');
    }
}
